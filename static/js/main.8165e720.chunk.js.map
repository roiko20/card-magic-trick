{"version":3,"sources":["Layout.components.js","utils.js","api.js","Components/Card.js","Components/PileCard.js","InstructionsText.js","Components/Instructions.js","Components/ButtonsTab.js","Components/Board.js","Components/App.js","reportWebVitals.js","index.js"],"names":["fadeInAnimation","keyframes","fadeIn","tadaAnimation","tada","Header","styled","header","CardsWrapper","div","props","class","css","CardLayout","PileCardLayout","InstructionsLayout","PileWrapper","ButtonWrapper","PileButtonsWrapper","Button","button","name","Wrapper","concatWithComma","length","cards","res","i","code","createPilesCardStrings","cardString1","cardString2","cardString3","j","z","createMainPileCardString","cardStringFirstPile","cardStringSecondPile","cardStringThirdPile","selectedPile","api","axios","create","baseURL","createDeck","a","get","params","count","data","cardsCodesString","createShuffledPartialDeck","deckId","cardString","deck_id","dealInPile","pileName","drawCardsFromDeck","cardsToDraw","listCardsInFirstPile","piles","firstPile","listCardsInSecondPile","secondPile","listCardsInThirdPile","thirdPile","createMainPile","drawPilesCardsFromMainPile","Card","className","this","alt","src","imageUrl","React","Component","PileCard","InstructionsText","Instructions","InstructionsMessages","phase","ButtonsTab","handleClickPile","onClick","Board","state","firstPileName","secondPileName","thirdPileName","selectedCard","cardsInFirstPile","cardsInSecondPile","cardsInThirdPile","handleClickReady","cardStringsArray","cardsFirstPile","cardsSecondPile","cardsThirdPile","setState","target","newDeckCardString","prevState","image","handleClickRestart","cardComponents","map","card","firstPileComponents","secondPileComponents","thirdPileComponents","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8165e720.chunk.js","sourcesContent":["import styled, { keyframes , css } from 'styled-components';\nimport { fadeIn , tada } from 'react-animations';\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\nconst tadaAnimation = keyframes`${tada}`;\n\nexport const Header = styled.header`\n    width: 100%;\n    text-align:center;\n    font-size: 46px;\n    font-weight: bold;\n    color: whitesmoke;\n    padding: 15px 0;\n    font-family: 'Fredoka One', cursive;\n    @media (max-width: 1200px) {\n        font-size: 42px;\n    }\n    @media (max-width: 680px) {\n        font-size: 40px;\n    }\n    @media (max-width: 520px) {\n        font-size: 36px;\n    }\n    @media (max-width: 480px) {\n        font-size: 28px;\n        padding: 15px 0;\n    }\n    @media (max-width: 380px) {\n        font-size: 22px;\n    }\n`;\n\nexport const CardsWrapper = styled.div`\n    animation: ${props => props.class === \"finalCard\" ? css`1.5s ${fadeInAnimation}` : \"none\"};\n    display: flex;\n    justify-content: center;\n    margin: auto;\n    padding-top: 30px;\n    padding-bottom: 70px;\n    padding-bottom: ${props => props.class === \"finalCard\" ? \"30px\" : \"70px\"};\n    width: 99%;\n    @media (max-width: 480px) {\n        padding-top: 10px;\n    }\n`;\n\nexport const CardLayout = styled.div`\n    overflow: hidden;\n    align-items: center;\n    margin: -6px;\n    &:first-child {\n        padding-left: 40px;\n    }\n     &:last-child {\n        overflow: visible;\n        padding-right: 40px;\n    }\n    @media (max-width: 480px) {\n        padding: 20px 0;\n            &:first-child {\n                padding-left: 15px;\n        }\n            &:last-child {\n                overflow: visible;\n                padding-right: 15px;\n        }\n    }\n`;\n\nexport const PileCardLayout = styled.div`\n    overflow: hidden;\n    align-items: center;\n    margin: -3px;\n    &:first-child {\n         padding-left: 40px;\n    }\n      &:last-child {\n         overflow: visible;\n         padding-right: 40px;\n    }\n    @media (max-width: 1250px) {\n      &:first-child {\n         padding-left: 25px;\n    }\n      &:last-child {\n         overflow: visible;\n         padding-right: 25px;\n    }\n    }\n    @media (max-width: 1100px) {\n        margin: auto;\n        margin-top: -35px;\n        max-height: 100px;\n            &:first-child {\n                padding-left: 0;\n                margin-top:5px;\n            }\n            &:last-child {\n                padding-right: 0;\n        }\n    }\n    @media (max-width: 630px) {\n        margin-top: -45px;\n    }\n    @media (max-width: 380px) {\n        margin-top: -55px;\n    }\n`;\n\nexport const InstructionsLayout = styled.div` {\n    animation: 1s ${tadaAnimation};\n    width: fit-content;\n    margin: auto;\n    padding: 0 20px;    \n    font-size: 20px;\n    color: white;\n    text-align:center;\n    display: flex;\n    justify-content: center;\n    white-space: pre;\n    line-height: 140%;\n    font-family: 'Rubik', sans-serif;\n    @media (max-width: 1200px) {\n        font-size: 18px;\n    }\n    @media (max-width: 680px) {\n        font-size: 18px;\n        line-height: 120%;\n    }\n    @media (max-width: 580px) {\n        font-size: 16px;\n    }\n    @media (max-width: 520px) {\n        font-size: 15px;\n    }\n    @media (max-width: 470px) {\n        font-size: 14px;\n    }\n    @media (max-width: 440px) {\n        font-size: 13px;\n    }\n    @media (max-width: 410px) {\n        font-size: 12px;\n    }\n    @media (max-width: 380px) {\n        font-size: 11px;\n    }\n`;\n\nexport const PileWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin:auto;\n    padding: 45px 0;\n    width: 31%;\n    @media (max-width: 1100px) {\n        flex-direction: column;\n        padding-top: 30px;\n        padding-bottom: 180px;\n        margin-bottom: 20px;\n    }\n    @media (max-width: 630px) {\n        padding-bottom: 155px;\n        margin-bottom: 20px;\n    }\n    @media (max-width: 515px) {\n        padding-bottom: 110px;\n        padding-top: 30px;\n    }\n    @media (max-width: 450px) {\n        padding-bottom: 90px;\n    }\n    @media (max-width: 380px) {\n        padding-top: 20px;\n        padding-bottom: 60px;\n        margin-bottom: 10px;\n    }\n`;\n\nexport const ButtonWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    flex-wrap: wrap;\n    width: 10vw;\n    margin: auto;\n    margin-top: 45px;\n    padding-bottom: 20px;\n    @media (max-width: 480px) {\n        margin-top: 25px;\n    }\n`;\n\nexport const PileButtonsWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    margin-top: 60px;\n    margin-bottom: 20px;\n    @media (max-width: 1515px) {\n        margin-top: 85px;\n    }\n    @media (max-width: 1400px) {\n        margin-top: 65px;\n        margin-bottom: 10px;\n    }\n    @media (max-width: 1200px) {\n        margin-top: 55px;\n        margin-bottom: 10px;\n    }\n    @media (max-width: 1100px) {\n        margin-top: 45px;\n        margin-bottom: 0;\n    }\n    @media (max-width: 740px) {\n        margin-top: 35px;\n    }\n    @media (max-width: 480px) {\n        margin-top: 25px;\n    }\n`;\n\nexport const Button =  styled.button`\n    background-image: linear-gradient(to right, rgba(54,139,208,1) 0%, rgba(55,180,240,1) 30%, rgba(105,200,245,1) 100%);\n    max-width: ${props => props.name !== \"deckButton\" ? \"13%\" : \"auto\"};\n    flex: 1 1 auto;\n    margin: 10px;\n    padding: 17px;\n    text-align: center;\n    letter-spacing: 0.04em;\n    font-family: 'Fredoka One', cursive;\n    text-transform: uppercase;\n    font-size: 23px;\n    transition: 0.5s;\n    background-size: 200% auto;\n    color: white;\n    cursor: pointer;\n    border-radius: 10px;\n    box-shadow: 2px 2px 8px black;\n    border: 0;\n    outline: none;\n    &:hover {\n       background-position: right center;\n       box-shadow: 5px 5px 10px black;\n    }\n    @media (max-width: 1690px) {\n        font-size: ${props => props.name === \"deckButton\" ? \"23px\" : \"20px\"};\n    }\n    @media (max-width: 1515px) {\n        font-size: ${props => props.name === \"deckButton\" ? \"23px\" : \"18px\"};\n    }\n    @media (max-width: 1400px) {\n        font-size: ${props => props.name === \"deckButton\" ? \"20px\" : \"17px\"};\n    }\n    @media (max-width: 1345px) {\n        font-size: ${props => props.name === \"deckButton\" ? \"20px\" : \"15px\"};\n        padding: ${props => props.name === \"deckButton\" ? \"17px\" : \"15px\"};\n    }\n    @media (max-width: 1200px) {\n        font-size: ${props => props.name === \"deckButton\" ? \"20px\" : \"13px\"};\n        padding: ${props => props.name === \"deckButton\" ? \"17px\" : \"13px\"};\n    }\n    @media (max-width: 970px) {\n        max-width: ${props => props.name !== \"deckButton\" ? \"17%\" : \"auto\"};\n    }\n    @media (max-width: 740px) {\n        max-width: ${props => props.name !== \"deckButton\" ? \"19%\" : \"auto\"};\n    }\n    @media (max-width: 680px) {\n        max-width: ${props => props.name !== \"deckButton\" ? \"25%\" : \"auto\"};\n    }\n    @media (max-width: 520px) {\n        font-size: ${props => props.name === \"deckButton\" ? \"14px\" : \"12px\"};\n    }\n    @media (max-width: 480px) {\n        font-size: ${props => props.name === \"deckButton\" ? \"13px\" : \"11px\"};\n        padding: ${props => props.name === \"deckButton\" ? \"14px\" : \"12px\"};\n        max-width: ${props => props.name !== \"deckButton\" ? \"28%\" : \"auto\"};\n    }\n    @media (max-width: 380px) {\n        font-size: ${props => props.name === \"deckButton\" ? \"12px\" : \"11px\"};\n        padding: ${props => props.name === \"deckButton\" ? \"13px\" : \"11px\"};\n        max-width: ${props => props.name !== \"deckButton\" ? \"30%\" : \"auto\"};\n    }\n`;\n\nexport const Wrapper = styled.div`\n    margin: 40px;\n    gradient(243.6deg, #FFFFFF 0.79%, #EAEFFF 100%);\n    box-shadow: 0px 0px 46px rgba(0, 0, 0, 0.12);\n    border-radius: 20px;\n    background: linear-gradient(to left, rgba(94,168,67,1) 0%, rgba(56,149,45,1) 100%);\n    @media (max-width: 780px) {\n        margin: 30px;\n    }\n    @media (max-width: 630px) {\n        margin: 20px;\n    }\n    @media (max-width: 480px) {\n        margin: 10px;\n    }\n`;\n","// const cardValues = [\n//     '2',\n//     '3',\n//     '4',\n//     '5',\n//     '6',\n//     '7',\n//     '8',\n//     '9',\n//     '10',\n//     'JACK',\n//     'QUEEN',\n//     'KING',\n//     'ACE'\n// ];\n\nexport const concatWithComma = ({...cards}, length) => {\n    let res = '';\n    for (let i = 0 ; i < length ; i++) {\n        res = res + `${cards[i].code}`;\n        if (i !== 20){\n            res = res + `,`;\n        }\n    }\n\n    return res;\n};\n\nexport const createPilesCardStrings = ({...cards}, length) => {\n    let cardString1 = '';\n    let cardString2 = '';\n    let cardString3 = '';\n    let i=0;\n    let j=1;\n    for ( let z=2 ; z < length ; z=z+3 ) {\n        cardString1 = cardString1 + `${cards[i].code}`;\n        cardString2 = cardString2 + `${cards[j].code}`;\n        cardString3 = cardString3 + `${cards[z].code}`;\n        if (i !== 18){\n            cardString1 = cardString1 + `,`;\n            cardString2 = cardString2 + `,`;\n            cardString3 = cardString3 + `,`;\n        }\n        i=i+3;\n        j=j+3;\n    }\n\n    return [cardString1,cardString2,cardString3];\n}\n\nexport const createMainPileCardString = (cardStringFirstPile, cardStringSecondPile, cardStringThirdPile, selectedPile) => {\n    let res = '';\n    if (selectedPile === \"firstPile\") {\n        res = cardStringSecondPile + `,` + cardStringFirstPile + `,` + cardStringThirdPile;\n    }\n    else if (selectedPile === \"secondPile\") {\n        res = cardStringFirstPile + `,` + cardStringSecondPile + `,` + cardStringThirdPile;\n    }\n    else {\n        res = cardStringFirstPile + `,` + cardStringThirdPile + `,` + cardStringSecondPile;\n    }\n\n    return res;\n}\n","import axios from 'axios';\nimport { concatWithComma } from './utils.js';\n\nconst api =axios.create({\n    baseURL: 'https://deckofcardsapi.com/api/deck/'\n});\n\nexport const createDeck = async () => {\n    const { data } = await api.get('new/draw/', {\n        params: {\n            count: 21\n        }\n    });\n\n    const { cards } = data;\n\n    const cardsCodesString = concatWithComma({...cards}, 21);\n    const { deckId } = await createShuffledPartialDeck(cardsCodesString);\n\n    return { cards , deckId };\n\n};\n\nexport const createShuffledPartialDeck = async (cardString) => {\n    const { data } = await api.get(`/new/shuffle/`, {\n        params: {\n            cards: cardString\n        }\n    });\n\n    const { deck_id : deckId } = data;\n\n    return { deckId };\n};\n\nexport const dealInPile = async ( deckId , pileName , cardString ) => {\n\n    await api.get(`${deckId}/pile/${pileName}/add/`, {\n        params: {\n            cards: cardString\n        }\n    });\n};\n\nexport const drawCardsFromDeck = async (deckId, cardsToDraw = 21) => {\n    await api.get(`${deckId}/draw/`, {\n        params: {\n            count: cardsToDraw\n        }\n    })\n};\n\nexport const listCardsInFirstPile = async (deckId) => {\n    const { data } = await api.get(`${deckId}/pile/firstPile/list/`);\n\n    const { piles } = data;\n    const { firstPile } = piles;\n    const { cards } = firstPile;\n\n    return { cards };\n};\n\nexport const listCardsInSecondPile = async (deckId) => {\n    const { data } = await api.get(`${deckId}/pile/secondPile/list/`);\n\n    const { piles } = data;\n    const { secondPile } = piles;\n    const { cards } = secondPile;\n\n    return { cards };\n};\n\nexport const listCardsInThirdPile = async (deckId) => {\n    const { data } = await api.get(`${deckId}/pile/thirdPile/list/`);\n\n    const { piles } = data;\n    const { thirdPile } = piles;\n    const { cards } = thirdPile;\n\n    return { cards };\n};\n\nexport const createMainPile = async (deckId , cardString) => {\n    await api.get(`${deckId}/pile/mainPile/add/`, {\n        params: {\n            cards: cardString\n        }\n    });\n\n};\n\nexport const drawPilesCardsFromMainPile = async (deckId, cardsToDraw = 21) => {\n    const {data} = await api.get(`${deckId}/pile/mainPile/draw/?count=21`, {\n        params: {\n            count: cardsToDraw\n        }\n    });\n\n    const { cards } = data;\n\n    return { cards };\n};\n\n//\n//     const { cards } = data;\n//     const cardsCodesString = concatWithComma({...cards});\n//     const { deckId : finalDeckId } = await createPartialDeck(cardsCodesString);\n//     return { cards , finalDeckId };\n//\n// };\n\n// export const createPile = async (deckId , pileName , cards) => {\n//     const { success } = await api.get(`${deckId}/pile/${pileName}/add/`, {\n//         params: {\n//             cards: `${cards}`\n//         }\n//     })\n//     // console.log({success});\n// };\n\n// export const DrawCardsFromPile = async (deckId, pileName, cardsToDraw = 7) => {\n//     const { data } = await api.get(`${deckId}/pile/${pileName}/draw/`, {\n//         params: {\n//             count: cardsToDraw\n//         }\n//     });\n//\n//     const { cards } = data;\n//     return {}\n// }\n\n","import React from 'react';\nimport { CardLayout} from \"../Layout.components\";\n\nexport default class Card extends React.Component {\n\n    render() {\n        return (\n            <CardLayout>\n                <img className={`${this.props.class}`} alt=\"card\" src={this.props.imageUrl} />\n            </CardLayout>\n        );\n    }\n}\n","import React from 'react';\nimport { PileCardLayout} from \"../Layout.components\";\n\nexport default class PileCard extends React.Component {\n\n    render() {\n        return (\n            <PileCardLayout>\n                <img className=\"pileCard\" alt=\"card\" src={this.props.imageUrl} />\n            </PileCardLayout>\n        );\n    }\n}\n","const InstructionsText = [\n\n    \"Hi there stranger\\n\\nPick any card from the below deck and remember it\\n When we're done, let's see if I can guess which card it was\\n\",\n\n    \"Great!\\nAfter shuffling our deck, the cards are in 3 different piles\\nPlease select the pile that holds the card you selected\\n\",\n\n    \"Every day I'm shufflin' ;)\\nNow let's do it again, same thing\\nPlease select the pile that holds the card you selected\\n\",\n\n    \"Almost done!\\nOne more to go,\\nPlease select the pile that holds the card you selected\\n\",\n\n    \"Allright! Ready?!\\nThe card you selected is...\\n\"\n];\n\nexport default InstructionsText;\n","import React from 'react';\nimport InstructionsMessages from '../InstructionsText.js';\n\nexport default function Instructions(props) {\n    return (\n        <p>\n            {InstructionsMessages[props.phase]}\n        </p>\n    )\n}\n","import React from 'react';\nimport { PileButtonsWrapper , Button } from '../Layout.components';\n\nconst ButtonsTab = ({ handleClickPile }) => (\n    <PileButtonsWrapper>\n        <Button name=\"firstPile\" onClick={handleClickPile}>First Pile</Button>\n        <Button name=\"secondPile\" onClick={handleClickPile}>Second Pile</Button>\n        <Button name=\"thirdPile\" onClick={handleClickPile}>Third Pile</Button>\n    </PileButtonsWrapper>\n)\n\nexport default ButtonsTab;\n","import React , { Component } from 'react';\nimport {createDeck, dealInPile, drawCardsFromDeck, listCardsInFirstPile, listCardsInSecondPile, listCardsInThirdPile , createMainPile , drawPilesCardsFromMainPile} from '../api';\nimport { CardsWrapper , InstructionsLayout , PileWrapper , ButtonWrapper , Button } from '../Layout.components';\nimport { createMainPileCardString } from \"../utils\";\nimport Card from './Card';\nimport PileCard from './PileCard';\nimport Instructions from './Instructions.js'\nimport ButtonsTab from './ButtonsTab'\n\nimport { createPilesCardStrings } from '../utils.js';\n\nexport default class Board extends Component {\n    state = {\n        deckId: null,\n        firstPileName: \"firstPile\",\n        secondPileName: \"secondPile\",\n        thirdPileName: \"thirdPile\",\n        selectedPile: null,\n        selectedCard: null,\n        cards: [],\n        cardsInFirstPile: [],\n        cardsInSecondPile: [],\n        cardsInThirdPile: [],\n        cardStringFirstPile: null,\n        cardStringSecondPile: null,\n        cardStringThirdPile: null,\n        phase: 0\n    };\n\nasync componentDidMount() {\n        const { cards , deckId } = await createDeck();\n        this.setState({\n            deckId,\n            cards\n        });\n    }\n\nhandleClickReady = async () => {\n        const cards = this.state.cards;\n        const cardStringsArray = createPilesCardStrings(cards,21);\n        const cardStringFirstPile = cardStringsArray[0];\n        const cardStringSecondPile = cardStringsArray[1];\n        const cardStringThirdPile = cardStringsArray[2];\n        await drawCardsFromDeck(this.state.deckId);\n        await dealInPile(this.state.deckId , this.state.firstPileName, cardStringFirstPile);\n        await dealInPile(this.state.deckId , this.state.secondPileName, cardStringSecondPile);\n        await dealInPile(this.state.deckId , this.state.thirdPileName, cardStringThirdPile);\n        const { cards : cardsFirstPile } = await listCardsInFirstPile(this.state.deckId);\n        const { cards : cardsSecondPile } = await listCardsInSecondPile(this.state.deckId);\n        const { cards : cardsThirdPile } = await listCardsInThirdPile(this.state.deckId);\n\n        this.setState( {\n            cardsInFirstPile : cardsFirstPile,\n            cardsInSecondPile : cardsSecondPile,\n            cardsInThirdPile: cardsThirdPile,\n            cardStringFirstPile,\n            cardStringSecondPile,\n            cardStringThirdPile,\n            phase: 1\n        })\n    };\n\nhandleClickPile = async ({target: {name: selectedPile}}) => {\n        const newDeckCardString = createMainPileCardString(this.state.cardStringFirstPile , this.state.cardStringSecondPile , this.state.cardStringThirdPile , selectedPile);\n        await createMainPile(this.state.deckId, newDeckCardString);\n        const { cards } = await drawPilesCardsFromMainPile(this.state.deckId);\n        const cardStringsArray = createPilesCardStrings(cards,21);\n        const cardStringFirstPile = cardStringsArray[0];\n        const cardStringSecondPile = cardStringsArray[1];\n        const cardStringThirdPile = cardStringsArray[2];\n        await dealInPile(this.state.deckId , this.state.firstPileName, cardStringFirstPile);\n        await dealInPile(this.state.deckId , this.state.secondPileName, cardStringSecondPile);\n        await dealInPile(this.state.deckId , this.state.thirdPileName, cardStringThirdPile);\n        const { cards : cardsFirstPile } = await listCardsInFirstPile(this.state.deckId);\n        const { cards : cardsSecondPile } = await listCardsInSecondPile(this.state.deckId);\n        const { cards : cardsThirdPile } = await listCardsInThirdPile(this.state.deckId);\n        await this.setState(prevState => {\n            return {\n                selectedPile,\n                cards,\n                cardsInFirstPile : cardsFirstPile,\n                cardsInSecondPile : cardsSecondPile,\n                cardsInThirdPile: cardsThirdPile,\n                cardStringFirstPile,\n                cardStringSecondPile,\n                cardStringThirdPile,\n                phase: prevState.phase + 1\n            }\n        })\n        if (this.state.phase === 4) {\n            const selectedCard = this.state.cardsInSecondPile[3].image;\n            await this.setState( {\n                selectedCard\n            })\n        }\n    };\n\nhandleClickRestart = async () => {\n    const { cards , deckId } = await createDeck();\n    this.setState({\n        phase: 0,\n        deckId,\n        cards\n    });\n};\n\nrender() {\n    const {cards} = this.state;\n    const cardComponents = cards.map(card => <Card key={card.code} imageUrl={card.image} class={\"deckCard\"}/>);\n    const {cardsInFirstPile} = this.state;\n    const firstPileComponents = cardsInFirstPile.map(card => <PileCard key={card.code} imageUrl={card.image}/>);\n    const {cardsInSecondPile} = this.state;\n    const secondPileComponents = cardsInSecondPile.map(card => <PileCard key={card.code} imageUrl={card.image}/>);\n    const {cardsInThirdPile} = this.state;\n    const thirdPileComponents = cardsInThirdPile.map(card => <PileCard key={card.code} imageUrl={card.image}/>);\n        return (\n            <div>\n                <InstructionsLayout>\n                    <Instructions phase={this.state.phase}/>\n                </InstructionsLayout>\n                    {this.state.phase <1 && <ButtonWrapper><Button name={\"deckButton\"} onClick={this.handleClickReady}>Ready</Button></ButtonWrapper>}\n                    {this.state.phase >= 1 && this.state.phase < 4 && <ButtonsTab handleClickPile={this.handleClickPile}/>}\n                {this.state.phase < 1 &&\n                <CardsWrapper>\n                    {cardComponents}\n                </CardsWrapper>}\n                {this.state.phase >= 1 && this.state.phase < 4 &&\n                <div className=\"pilesDiv\">\n                    <PileWrapper>\n                         {firstPileComponents}\n                    </PileWrapper>\n                    <PileWrapper>\n                         {secondPileComponents}\n                    </PileWrapper>\n                    <PileWrapper>\n                        {thirdPileComponents}\n                    </PileWrapper>\n                </div>}\n                {this.state.phase >= 4 &&\n                    <CardsWrapper class={\"finalCard\"}>\n                        <Card imageUrl={this.state.selectedCard} class={\"finalCard\"}/>\n                    </CardsWrapper>}\n                {this.state.phase >= 4 &&\n                    <ButtonWrapper><Button name={\"deckButton\"} onClick={this.handleClickRestart}>Restart</Button></ButtonWrapper>}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport '../App.css';\nimport { Header , Wrapper  } from '../Layout.components';\nimport Board from './Board'\n\nconst App = () =>\n  (\n    <div className=\"App\">\n        <Wrapper>\n            <Header>Card Magic Trick<img className={\"headerIcon\"} alt={\"cardIcon\"} src=\"https://img.icons8.com/dusk/80/000000/cards.png\"/></Header>\n            <Board/>\n        </Wrapper>\n    </div>\n  )\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}